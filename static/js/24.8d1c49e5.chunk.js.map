{"version":3,"file":"static/js/24.8d1c49e5.chunk.js","mappings":"qOAMA,EANqB,CACjBA,KAAM,GACNC,MAAO,GACPC,SAAU,ICqBd,EAxBe,CACXF,KAAM,CACFG,MAAO,YACPH,KAAM,OACNI,KAAM,OACNC,YAAa,kBACbC,UAAU,GAEdL,MAAO,CACHE,MAAO,aACPH,KAAM,QACNI,KAAM,QACNC,YAAa,mBACbC,UAAU,GAEdJ,SAAU,CACNC,MAAO,gBACPH,KAAM,WACNI,KAAM,WACNC,YAAa,sCACbC,UAAU,I,oECLZC,EAAe,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SACpB,GAA8CC,EAAAA,EAAAA,GAAQ,CAAEC,aAAAA,EAAcF,SAAAA,IAA9DG,EAAK,EAALA,MAAOC,EAAY,EAAZA,aAAcC,EAAY,EAAZA,aAEvBC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAEtBC,GAASC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,GAAE,IACjCC,GAAUF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,GAAE,IAClCE,GAAaH,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,GAAE,IAEnCnB,EAA0BW,EAA1BX,KAAMC,EAAoBU,EAApBV,MAAOC,EAAaS,EAAbT,SAGrB,OAEQ,kBAAMM,SAAUK,EAAa,WACzB,SAACS,EAAA,GAAS,QAACC,GAAIN,EAAQO,MAAOxB,EAAMY,aAAcA,GAAkBa,EAAAA,QACpE,SAACH,EAAA,GAAS,QAACC,GAAIH,EAASI,MAAOvB,EAAOW,aAAcA,GAAkBa,EAAAA,SACtE,SAACH,EAAA,GAAS,QAACC,GAAIF,EAAYG,MAAOtB,EAAUU,aAAcA,GAAkBa,EAAAA,YAC5E,UAAC,KAAM,CAACrB,KAAK,SAAQ,sBAAWU,IAAW,SAAC,IAAO,SAGnE,EAEA,ICjCe,SAASY,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKC,UAAU,YAAW,WACxB,2CACA,SAAC,EAAY,CAACrB,SAPC,SAACsB,GAClBH,GAASI,EAAAA,EAAAA,IAAOD,GAClB,MAQF,CDsBAvB,EAAayB,aAAe,CACxBxB,SAAU,WAAO,E,uDExCrB,MAA4B,8BAA5B,EAAkE,0B,SCG5Dc,EAAY,SAAH,GAA0G,IAArGC,EAAE,EAAFA,GAAIpB,EAAK,EAALA,MAAOqB,EAAK,EAALA,MAAOxB,EAAI,EAAJA,KAAMY,EAAY,EAAZA,aAAcR,EAAI,EAAJA,KAAM6B,EAAO,EAAPA,QAASJ,EAAS,EAATA,UAAWxB,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAAU4B,EAAO,EAAPA,QACjGC,EAAgBN,EAAS,UAAMO,EAAY,YAAIP,GAAcO,EAEnE,OACI,iBAAKP,UAAWO,EAAiB,UAC5BjC,IAAS,kBAAOkC,QAASd,EAAG,SAAEpB,KAC/B,kBAAOoB,GAAIA,EAAIC,MAAOA,EAAOS,QAASA,EAASjC,KAAMA,EAAMsC,SAAU1B,EAAcR,KAAMA,EAAMyB,UAAWM,EAAe9B,YAAaA,EAAaC,SAAUA,EAAU4B,QAASA,MAG5L,EAEA,IAEAZ,EAAUU,aAAe,CACrB5B,KAAM,OACNE,UAAU,E,kECId,IArBgB,SAAH,GAAkC,IAA7BI,EAAY,EAAZA,aAAcF,EAAQ,EAARA,SAC5B,GAA0B+B,EAAAA,EAAAA,WAAS,UAAI7B,IAAc,eAA9CC,EAAK,KAAE6B,EAAQ,KAiBtB,MAAO,CAAC7B,MAAAA,EAAO6B,SAAAA,EAAU5B,aAfJ,SAAH,GAAkB,IAAb6B,EAAM,EAANA,OACZjB,EAA8BiB,EAA9BjB,MAAOxB,EAAuByC,EAAvBzC,KAAMI,EAAiBqC,EAAjBrC,KAAM6B,EAAWQ,EAAXR,QACpBS,EAAoB,aAATtC,EAAsB6B,EAAUT,EACjDgB,GAAS,SAAAG,GAAS,yBACXA,GAAS,cACX3C,EAAO0C,GAAQ,GAExB,EAQuC7B,aANlB,SAAC+B,GAClBA,EAAEC,iBACFrC,GAAS,UAAIG,IACb6B,GAAS,UAAI9B,GACjB,EAGJ,C","sources":["components/RegisterForm/initialState.js","components/RegisterForm/fields.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n}\n\nexport default initialState;","const fields = {\n    name: {\n        label: \"User name\",\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Enter user name\",\n        required: true,\n    },\n    email: {\n        label: \"User email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Enter user email\",\n        required: true,\n    },\n    password: {\n        label: \"User password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter user password (min 6 symbols)\",\n        required: true,\n    }\n}\n\nexport default fields;","import PropTypes from \"prop-types\";\nimport { nanoid } from 'nanoid'\n\nimport initialState from './initialState'\nimport fields from './fields'\nimport { useMemo } from 'react'\nimport useForm from \"shared/hooks/useForm\";\nimport TextField from \"shared/components/TextField/TextField\";\n\nimport { getLoading } from \"redux/auth/auth-selectors\";\nimport { Spinner } from '@chakra-ui/react'\nimport { useSelector } from \"react-redux\";\nimport { Button } from '@chakra-ui/react'\n\n\nconst RegisterForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = useForm({ initialState, onSubmit })\n    \n    const loading = useSelector(getLoading)\n    \n    const nameId = useMemo(() => nanoid(), [])\n    const emailId = useMemo(() => nanoid(), [])\n    const passwordId = useMemo(() => nanoid(), [])\n\n    const { name, email, password } = state\n\n\n    return (\n\n            <form onSubmit={handleSubmit}>\n                <TextField id={nameId} value={name} handleChange={handleChange} {...fields.name} />\n                <TextField id={emailId} value={email} handleChange={handleChange} {...fields.email} />\n                <TextField id={passwordId} value={password} handleChange={handleChange} {...fields.password} />\n                <Button type=\"submit\">Register {loading && <Spinner />}</Button>\n            </form>\n    )\n}\n\nexport default RegisterForm\n\nRegisterForm.defaultProps = {\n    onSubmit: () => {}\n}\n\nRegisterForm.propTypes = {\n    onSubmit: PropTypes.func,\n}","// redux\nimport { useDispatch } from \"react-redux\";\nimport { signup } from \"../../redux/auth/auth-operations\";\nimport RegisterForm from '../../components/RegisterForm/RegisterForm'\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n\n  const onRegister = (data) => {\n    dispatch(signup(data));\n  }\n\n  return (\n    <div className='container'>\n      <h1>Register page</h1>\n      <RegisterForm onSubmit={onRegister}/>\n    </div>\n  )\n}","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"text-field_formGroup__8dkRW\",\"field\":\"text-field_field__HbtIT\"};","import PropTypes from \"prop-types\";\n\nimport styles from \"./text-field.module.css\";\n\nconst TextField = ({id, label, value, name, handleChange, type, checked, className, placeholder, required, pattern}) => {\n    const fullClassName = className ? `${styles.field} ${className}` : styles.field;\n\n    return (\n        <div className={styles.formGroup}>\n            {label && <label htmlFor={id}>{label}</label>}\n            <input id={id} value={value} checked={checked} name={name} onChange={handleChange} type={type} className={fullClassName} placeholder={placeholder} required={required} pattern={pattern} />\n        </div>\n    )\n}\n\nexport default TextField;\n\nTextField.defaultProps = {\n    type: \"text\",\n    required: false,\n}\n\nTextField.propTypes = {\n    id: PropTypes.string, \n    label: PropTypes.string, \n    value: PropTypes.string, \n    name: PropTypes.string.isRequired, \n    handleChange: PropTypes.func.isRequired, \n    type: PropTypes.string, \n    className: PropTypes.string, \n    placeholder: PropTypes.string,  \n    required: PropTypes.bool, \n    pattern: PropTypes.string,\n}","import {useState} from \"react\";\n\nconst useForm = ({initialState, onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const {value, name, type, checked} = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue,\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;"],"names":["name","email","password","label","type","placeholder","required","RegisterForm","onSubmit","useForm","initialState","state","handleChange","handleSubmit","loading","useSelector","getLoading","nameId","useMemo","nanoid","emailId","passwordId","TextField","id","value","fields","RegisterPage","dispatch","useDispatch","className","data","signup","defaultProps","checked","pattern","fullClassName","styles","htmlFor","onChange","useState","setState","target","newValue","prevState","e","preventDefault"],"sourceRoot":""}